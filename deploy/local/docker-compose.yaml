version: "3.7"

services:
    shop:
        build: ./../../application/Shop
        image: serbanblebea/online-shop-shop:v0.4
        container_name: shop
        environment:
            REDIS_HOST: "redis"
            REDIS_PORT: "6379"
            MONGO_HOST: "mongodb-shop"
            MONGO_PORT: "27017"
        ports:
            - 8077:8000
        networks:
            - shop
            - backend
        depends_on: 
            - mongodb-shop
            - redis
        restart: on-failure
    customer:
        build: ./../../application/Customer
        image: serbanblebea/online-shop-customer:v0.2
        container_name: customer
        ports:
            - 8076:8000
        networks: 
            - customer
            - backend
        depends_on: 
            - mongodb-customer
            - redis
        restart: on-failure
    worker:
        build: ./../../application/Worker
        image: serbanblebea/online-shop-worker:v0.3
        container_name: worker
        networks:
            - backend
        depends_on: 
            - shop
            - customer
        restart: on-failure
    mongodb-shop:
        image: mongo:latest
        container_name: mongodb-shop
        networks:
            - shop
        ports:
            - 27016:27017
    mongodb-customer:
        image: mongo:latest
        container_name: mongodb-customer
        networks:
            - customer
        ports:
            - 27017:27017
    redis:
        image: redis
        container_name: redis
        ports:
            - 6379:6379
        networks:
            - backend
    dashboard:
        build: ./../../application/Dashboard
        image: serbanblebea/online-shop-dashboard:v0.4
        container_name: dashboard
        environment:
            NUXT_ENV_SHOP_URL: "localhost:8077"
            NUXT_ENV_CUSTOMER_URL: "localhost:8076"
        depends_on: 
            - redis
        restart: on-failure
        networks:
            - backend
        ports:
            - 5000:5000
        
networks:
    customer:
        driver: bridge
    shop:
        driver: bridge
    backend:
        driver: bridge